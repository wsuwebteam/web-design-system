name: Publish

on:
  push:
    branches:
      - "main"

env:
  NODE_VERSION: 20
  ARTIFACT_NAME: built-assets

jobs:
  build:
    name: Build Assets
    uses: ./.github/workflows/build-assets.yml
    with:
      branch_ref: main
      node_version: 20 # env not available ${{ env.NODE_VERSION }}
      artifact_name: built-assets # env not available here ${{ env.ARTIFACT_NAME }}

  deploy-staging:
    runs-on: ubuntu-latest
    environment: staging
    name: Deploy to Staging Environment
    needs: build
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{env.ARTIFACT_NAME}}
          path: ./assets

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2

      - name: Push to S3
        run: |
          echo "Deploying assets to S3 | s3://cdn-web-wsu/designsystem/2.beta/dist/bundles/"
          aws s3 sync ./assets/ s3://cdn-web-wsu/designsystem/2.beta/dist/bundles/

      - name: Invalidate CloudFront cache
        run: aws --no-cli-pager cloudfront create-invalidation --distribution-id ${{ secrets.AWS_WDS_DISTRIBUTION_ID }} --paths "/designsystem/2.beta/dist/bundles/*"

  deploy-production:
    runs-on: ubuntu-latest
    environment: production
    name: Deploy to Production
    needs: [build, deploy-staging]
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{env.ARTIFACT_NAME}}
          path: ./assets

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2

      - name: Push to S3
        run: |
          echo "Deploying assets to S3 | s3://cdn-web-wsu/designsystem/2.x/dist/bundles/"
          aws s3 sync ./assets/ s3://cdn-web-wsu/designsystem/2.x/dist/bundles/

      - name: Invalidate CloudFront cache
        run: aws --no-cli-pager cloudfront create-invalidation --distribution-id ${{ secrets.AWS_WDS_DISTRIBUTION_ID }} --paths "/designsystem/2.x/dist/bundles/*"

  create-release:
    runs-on: ubuntu-latest
    name: Create Release
    needs: [deploy-production]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"
          cache-dependency-path: ./package-lock.json

      - name: Install dependencies
        run: npx ci

      - name: Download build assets
        uses: actions/download-artifact@v4
        with:
          name: ${{env.ARTIFACT_NAME}}
          path: ./build-assets

      - name: Create release asset
        run: |
          pushd ./build-assets
          zip release.zip ./ -r
          mv release.zip ${{ github.workspace }}
          popd

      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.PAT }}
        run: npx semantic-release
