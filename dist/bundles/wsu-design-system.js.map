{"version":3,"sources":["webpack://wsu-web-design-system/./_assets/js/partials/toggle.js","webpack://wsu-web-design-system/./src/elements/menu-toggle/_menu-toggle.js","webpack://wsu-web-design-system/./_assets/js/partials/element.js","webpack://wsu-web-design-system/./_assets/js/partials/events.js","webpack://wsu-web-design-system/./src/components/navigation-site-vertical/_navigation-site-vertical.js","webpack://wsu-web-design-system/./src/components/header-global/_header-global.js","webpack://wsu-web-design-system/./src/bundles/wsu-design-system.js"],"names":["toggleAria","props","wrapper","toggleByClass","classList","contains","toggleAriaExpandedClose","toggleAriaExpandedOpen","getAttribute","isAnimated","actionPrefix","ariaLabelElement","toggleHeight","toggleAnimating","toggleLabel","setAttribute","add","remove","animatedDuration","animateClass","animateHeight","childElement","setTimeout","style","maxHeight","toggleShould","eventElement","clickClass","checkParent","console","log","parentElement","isExpanded","expandedText","collapsedText","hasAttribute","label","action","regex","RegExp","replace","isExpanding","heightPadding","childElementHeight","scrollHeight","submenu","atts","this","baseClass","hasOwnProperty","wrapperClass","closeClass","openClass","toggleClass","animatingClass","animationTiming","timer","init","bindEvents","document","addEventListener","clickEvents","bind","event","target","preventDefault","getElementsByTagName","error","elementGet","elementClass","elements","getElementsByClassName","length","keyDownEvent","domEvent","key","inClass","Element","prototype","closest","keyDownEvents","WsuNavigationSiteVertical","WsuMenuToggle","WsuHeaderGlobal"],"mappings":"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","file":"dist/bundles/wsu-design-system.js","sourcesContent":["const toggleAria = ( props ) => {\r\n\r\n    let {\r\n        wrapper = false,\r\n        toggleByClass = false,\r\n    } = props;\r\n\r\n    // If element exists\r\n    if ( wrapper ) {\r\n\r\n        if ( toggleByClass ) {\r\n\r\n            if ( wrapper.classList.contains( toggleByClass ) ) {\r\n\t\t\t\r\n                toggleAriaExpandedClose( props ); \r\n        \r\n            } else {\r\n        \r\n                toggleAriaExpandedOpen( props );\r\n                \r\n            }\r\n\r\n        } else {\r\n\r\n            if ( wrapper.getAttribute('aria-expanded') && 'false' != wrapper.getAttribute('aria-expanded') ) {\r\n\t\t\t\r\n                toggleAriaExpandedClose( props ); \r\n        \r\n            } else {\r\n        \r\n                toggleAriaExpandedOpen( props );\r\n                \r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\nconst toggleAriaExpandedOpen = ( props ) => {\r\n\r\n    let {\r\n        wrapper          = false,\r\n        isAnimated       = true,\r\n        actionPrefix     = false,\r\n        ariaLabelElement = false,\r\n    } = props;\r\n\r\n\r\n    // If element exists\r\n    if ( wrapper ) {\r\n\r\n        toggleHeight( props, true );\r\n        toggleAnimating( props );\r\n        toggleLabel( props, true );\r\n\r\n        wrapper.setAttribute('aria-expanded',true);\r\n\r\n        if ( actionPrefix ) {\r\n            wrapper.classList.add( actionPrefix + '--openned' );\r\n            wrapper.classList.remove( actionPrefix + '--closed' );\r\n        }\r\n        \r\n        toggleAnimating( props );\r\n\r\n    }\r\n\r\n}\r\n\r\nconst toggleAriaExpandedClose = ( props ) => {\r\n\r\n    let {\r\n        wrapper          = false,\r\n        isAnimated       = true,\r\n        actionPrefix     = false,\r\n        ariaLabelElement = false,\r\n    } = props;\r\n\r\n    // If element exists\r\n    if ( wrapper ) {\r\n\r\n        toggleHeight( props, false );\r\n        toggleAnimating( props );\r\n\r\n        toggleLabel( props, false );\r\n\r\n        if ( actionPrefix ) {\r\n            wrapper.classList.add( actionPrefix + '--closed' );\r\n            wrapper.classList.remove( actionPrefix + '--openned' );\r\n        }\r\n\r\n        wrapper.setAttribute('aria-expanded', false ); \r\n\r\n        toggleAnimating( props );\r\n            \r\n\r\n    }\r\n\r\n}\r\n\r\nconst toggleAnimating = ( props ) => {\r\n\r\n    let {\r\n        wrapper          = false,\r\n        animatedDuration = 300,\r\n        animateClass     = 'wsu-animating',\r\n        isAnimated       = true,\r\n        animateHeight    = false,\r\n        childElement     = false,\r\n    } = props;\r\n\r\n    if ( isAnimated && wrapper ) {\r\n\r\n        if ( wrapper.classList.contains( animateClass ) ) {\r\n\r\n            let timer = setTimeout(\r\n                function() {\r\n                    wrapper.classList.remove( animateClass );\r\n\r\n                    if ( animateHeight && childElement ) {\r\n\r\n                        childElement.style.maxHeight = '';\r\n\r\n                    }\r\n                \r\n                }, \r\n                animatedDuration\r\n            );\r\n    \r\n            return timer;\r\n    \r\n        } else {\r\n    \r\n            wrapper.classList.add( animateClass );\r\n    \r\n            return false;\r\n    \r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\nconst toggleShould = ( props ) => {\r\n\r\n    let { \r\n        eventElement = false, \r\n        clickClass = false,\r\n        checkParent = false, \r\n    } = props;\r\n\r\n    console.log( clickClass )\r\n    console.log( eventElement.classList.contains( clickClass ) )\r\n\r\n    if ( eventElement.classList.contains( clickClass ) ) {\r\n\r\n        return true;\r\n\r\n    } else if ( checkParent && eventElement.parentElement.classList.contains( clickClass ) ) {\r\n\r\n        return true;\r\n\r\n    }\r\n\r\n    return false;\r\n\r\n}\r\n\r\n\r\nconst toggleLabel = ( props, isExpanded ) => {\r\n    let { \r\n        expandedText = 'Close', \r\n        collapsedText = 'Open', \r\n        ariaLabelElement = false,\r\n    } = props;\r\n\r\n    console.log( props );\r\n\r\n\r\n    if ( ariaLabelElement && ariaLabelElement.hasAttribute('aria-label') ) {\r\n\r\n        let label = ariaLabelElement.getAttribute('aria-label');\r\n\r\n        let action = ( isExpanded ) ? expandedText : collapsedText;\r\n\r\n        let regex = new RegExp( expandedText + '|' + collapsedText, \"g\");\r\n\r\n        console.log( regex );\r\n\r\n        label = label.replace( regex, action );\r\n\r\n        ariaLabelElement.setAttribute( 'aria-label', label );\r\n\r\n    }\r\n}\r\n\r\n\r\nconst toggleHeight = ( props, isExpanding ) => {\r\n\r\n    let {\r\n        \r\n        childElement = false,\r\n        animateHeight = false,\r\n        heightPadding = 20,\r\n    } = props;\r\n\r\n    if ( childElement && animateHeight ) {\r\n\r\n        let childElementHeight = ( childElement.scrollHeight + heightPadding ) + \"px\";\r\n\r\n        childElement.style.maxHeight = childElementHeight;\r\n\r\n        if ( ! isExpanding ) {\r\n\r\n            setTimeout(\r\n                function() {\r\n                    submenu.style.maxHeight = 0;\r\n                }, \r\n                25\r\n            );\r\n\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nexport { toggleAria, toggleAriaExpandedOpen, toggleAriaExpandedClose, toggleAnimating, toggleShould };","/*import WsuToggleMenu from \"../../../_assets/js/wsuToggleMenu\";\r\n\r\nconst wsuMenuToggle = new WsuToggleMenu( { clickClass: 'wsu-menu-toggle--toggle', toggleHeight: true } );\r\n\r\nexport default wsuMenuToggle;*/\r\n\r\nimport { elementGet } from \"../../../_assets/js/partials/element\";\r\nimport { toggleAria, toggleShould, toggleAriaExpandedOpen, toggleAriaExpandedClose } from \"../../../_assets/js/partials/toggle\";\r\nimport { keyDownEvent } from '../../../_assets/js/partials/events';\r\n\r\nclass WsuMenuToggle {\r\n\r\n    constructor( atts = {} ) {\r\n\r\n        this.baseClass        = ( atts.hasOwnProperty( 'baseClass') ) ? atts.baseClass : 'wsu-menu-toggle';\r\n        this.wrapperClass     = ( atts.hasOwnProperty( 'wrapperClass') ) ? atts.wrapperClass : this.baseClass;\r\n        this.closeClass       = ( atts.hasOwnProperty( 'closeClass') ) ? atts.closeClass : this.baseClass + '--close';\r\n        this.openClass        = ( atts.hasOwnProperty( 'openClass') ) ? atts.openClass : this.baseClass + '--open';\r\n        this.toggleClass      = ( atts.hasOwnProperty( 'toggleClass') ) ? atts.toggleClass : this.baseClass + '--toggle';\r\n        this.animatingClass   = ( atts.hasOwnProperty( 'animatingClass') ) ? atts.animatingClass : 'wsu-animating';\r\n        this.animationTiming  = ( atts.hasOwnProperty( 'animationTiming') ) ? atts.animationTiming : 300;\r\n        this.actionPrefix     = ( atts.hasOwnProperty( 'actionPrefix') ) ? atts.actionPrefix : this.baseClass;\r\n        this.toggleHeight     = ( atts.hasOwnProperty( 'toggleHeight') ) ? atts.toggleHeight : true;\r\n        this.timer            = false;\r\n\r\n        this.init();\r\n        \r\n    }\r\n\r\n    init() {\r\n\r\n        this.bindEvents();\r\n\r\n    }\r\n\r\n    bindEvents() {\r\n\t\tdocument.addEventListener(\r\n\t\t\t'click', \r\n\t\t\tthis.clickEvents.bind( this ),\r\n\t\t\tfalse\r\n\t\t);\r\n\r\n\t}\r\n\r\n    clickEvents( event ) {\r\n\t\t\r\n\t\ttry {\r\n\r\n            let eventElement = event.target;\r\n\r\n            if ( toggleShould( { eventElement: eventElement, clickClass: this.toggleClass, checkParent: true }) ) {\r\n\r\n                event.preventDefault();\r\n\r\n                let wrapper      = event.target.parentElement;\r\n\r\n                if ( wrapper ) {\r\n\r\n                    let childElement =  wrapper.getElementsByTagName('ul')[0];\r\n\r\n                    toggleAria( { \r\n                        wrapper: wrapper,\r\n                        toggleByClass: this.actionPrefix + '--openned',\r\n                        childElement: childElement,\r\n                        actionPrefix: this.actionPrefix,\r\n                        animateHeight: true,\r\n                        ariaLabelElement: eventElement,\r\n                    } );\r\n\r\n                }\r\n\r\n            }\r\n\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n  \r\n    }\r\n\r\n\r\n    /*keyDownEvents( event ) {\r\n\r\n        try {\r\n\r\n            if ( keyDownEvent( { domEvent: event, key:'Escape', inClass: this.wrapperClass } ) ) {\r\n\r\n                let menu = eventElement.closest( 'ul' );\r\n\r\n                if ( menu ) {\r\n\r\n                    let wrapper = menu.parentElement;\r\n                    let button = wrapper.querySelector('button');\r\n\r\n                    if ( wrapper ) {\r\n\r\n                        toggleAria( { \r\n                            wrapper: wrapper,\r\n                            childElement: menu,\r\n                            actionPrefix: this.actionPrefix,\r\n                            animateHeight: true,\r\n                            ariaLabelElement: button,\r\n                        } );\r\n                        \r\n                    }\r\n                }\r\n\r\n            }\r\n           \r\n\t\t} catch (error) {\r\n\t\t  console.error(error);\r\n\t\t}\r\n\r\n    }*/\r\n\r\n}\r\n\r\nexport default WsuMenuToggle;\r\n\r\n\r\n","const elementGet = ( { elementClass = false } ) => {\r\n\r\n    if ( elementClass ) {\r\n\r\n\t\t\r\n        let elements = document.getElementsByClassName( elementClass );\r\n        \r\n        if ( 0 < elements.length ) {\r\n            \r\n            return elements[0];\r\n            \r\n        } else {\r\n            \r\n            return false;\r\n            \r\n        }\r\n            \r\n    } \r\n\r\n    return false;\r\n\r\n}\r\n\r\nexport { elementGet }","const keyDownEvent = ( props ) => {\r\n\r\n    let { \r\n        domEvent = false,\r\n        key      = false,\r\n        inClass  = false\r\n    } = props;\r\n\r\n    if ( ! domEvent || ! key ) {\r\n\r\n        return false;\r\n\r\n    }\r\n\r\n    let eventElement = domEvent.target;\r\n    let eventKey     = domEvent.key;\r\n\r\n    if ( key === eventKey && Element.prototype.closest ) {\r\n\r\n        if ( inClass && eventElement.closest( '.' + inClass ) ) {\r\n\r\n            return true;\r\n\r\n        } \r\n\r\n    } else {\r\n\r\n        return false;\r\n\r\n    }\r\n\r\n}\r\n\r\nexport { keyDownEvent };","import { elementGet } from \"../../../_assets/js/partials/element\";\r\nimport { toggleAria, toggleShould, toggleAriaExpandedOpen, toggleAriaExpandedClose } from \"../../../_assets/js/partials/toggle\";\r\nimport { keyDownEvent } from '../../../_assets/js/partials/events';\r\n\r\nclass WsuNavigationSiteVertical {\r\n\r\n    constructor( atts = {} ) {\r\n\r\n        this.wrapperClass     = ( atts.hasOwnProperty( 'wrapperClass') ) ? atts.wrapperClass : 'wsu-navigation-site-vertical';\r\n        this.closeClass       = ( atts.hasOwnProperty( 'closeClass') ) ? atts.closeClass : 'wsu-navigation-site-vertical--close';\r\n        this.openClass        = ( atts.hasOwnProperty( 'openClass') ) ? atts.openClass : 'wsu-navigation-site-vertical--open';\r\n        this.toggleClass      = ( atts.hasOwnProperty( 'toggleClass') ) ? atts.toggleClass : 'wsu-navigation-site--toggle';\r\n        this.animatingClass   = ( atts.hasOwnProperty( 'animatingClass') ) ? atts.animatingClass : 'wsu-animating';\r\n        this.animationTiming  = ( atts.hasOwnProperty( 'animationTiming') ) ? atts.animationTiming : 300;\r\n        this.actionPrefix     = ( atts.hasOwnProperty( 'actionPrefix') ) ? atts.actionPrefix : 'wsu-navigation-site-vertical';\r\n        this.timer            = false;\r\n\r\n        this.init();\r\n        \r\n    }\r\n\r\n    init() {\r\n\r\n        this.bindEvents();\r\n\r\n    }\r\n\r\n    bindEvents() {\r\n\t\tdocument.addEventListener(\r\n\t\t\t'click', \r\n\t\t\tthis.clickEvents.bind( this ),\r\n\t\t\tfalse\r\n\t\t);\r\n\r\n        document.addEventListener(\r\n\t\t\t'keydown', \r\n\t\t\tthis.keyDownEvents.bind( this ),\r\n\t\t\tfalse\r\n\t\t);\r\n\t}\r\n\r\n    clickEvents( event ) {\r\n\t\t\r\n\t\ttry {\r\n\r\n            let eventElement = event.target;\r\n\r\n            // check Close Navigation\r\n            if ( toggleShould( { eventElement: eventElement, clickClass: this.closeClass, checkParent: true }) ) {\r\n\r\n                event.preventDefault();\r\n\r\n                let wrapper = elementGet( { elementClass: this.wrapperClass } );\r\n\r\n                console.log( wrapper );\r\n\r\n                if ( wrapper ) {\r\n\r\n                    toggleAriaExpandedClose( { \r\n                        wrapper: wrapper,\r\n                        actionPrefix: this.actionPrefix,\r\n                    } );\r\n\r\n                }\r\n\r\n            }\r\n\r\n            // Check Open Navigation\r\n            if ( toggleShould( { eventElement: eventElement, clickClass: this.openClass, checkParent: true }) ) {\r\n\r\n                event.preventDefault();\r\n\r\n                let wrapper = elementGet( { elementClass: this.wrapperClass } );\r\n\r\n                if ( wrapper ) {\r\n\r\n                    toggleAriaExpandedOpen( { \r\n                        wrapper: wrapper,\r\n                        actionPrefix: this.actionPrefix,\r\n                    } );\r\n\r\n                }\r\n\r\n            }\r\n\r\n            // Check Toggle Navigation\r\n            if ( toggleShould( { eventElement: eventElement, clickClass: this.toggleClass, checkParent: true }) ) {\r\n\r\n                event.preventDefault();\r\n\r\n                let wrapper = elementGet( { elementClass: this.wrapperClass } );\r\n\r\n                if ( wrapper ) {\r\n\r\n                    toggleAria( { \r\n                        wrapper: wrapper,\r\n                        toggleByClass: this.actionPrefix + '--openned',\r\n                        actionPrefix: this.actionPrefix,\r\n                        ariaLabelElement: eventElement,\r\n                    } );\r\n\r\n                }\r\n\r\n            }\r\n\t\t\t\r\n\t\t\t\r\n\t\t} catch (error) {\r\n\t\t  console.error(error);\r\n\t\t}\r\n\t\t\r\n\t}\r\n\r\n\r\n    keyDownEvents( event ) {\r\n\r\n        try {\r\n\r\n            if ( keyDownEvent( { domEvent: event, key:'Escape', inClass: this.wrapperClass } ) ) {\r\n\r\n                toggleAriaExpandedClose( { \r\n                    wrapper:          elementGet( { elementClass: this.wrapperClass } ),\r\n                    actionPrefix:     this.actionPrefix,\r\n                    ariaLabelElement: elementGet( { elementClass: 'wsu-navigation-site--toggle' } ),  \r\n                } );\r\n\r\n            }\r\n           \r\n\t\t} catch (error) {\r\n\t\t  console.error(error);\r\n\t\t}\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default WsuNavigationSiteVertical;\r\n","import { elementGet } from \"../../../_assets/js/partials/element\";\r\nimport { toggleAria, toggleShould, toggleAriaExpandedOpen, toggleAriaExpandedClose } from \"../../../_assets/js/partials/toggle\";\r\nimport { keyDownEvent } from '../../../_assets/js/partials/events';\r\n\r\nclass WsuHeaderGlobal {\r\n\r\n    constructor( atts = {} ) {\r\n\r\n        this.wrapperClass     = ( atts.hasOwnProperty( 'wrapperClass') ) ? atts.wrapperClass : 'wsu-header-global__navigation-menu';\r\n        this.closeClass       = ( atts.hasOwnProperty( 'closeClass') ) ? atts.closeClass : 'wsu-header-global__navigation-menu--close';\r\n        this.openClass        = ( atts.hasOwnProperty( 'openClass') ) ? atts.openClass : 'wsu-header-global__navigation-menu--open';\r\n        this.toggleClass      = ( atts.hasOwnProperty( 'toggleClass') ) ? atts.toggleClass : 'wsu-header-global__navigation-menu--toggle';\r\n        this.animatingClass   = ( atts.hasOwnProperty( 'animatingClass') ) ? atts.animatingClass : 'wsu-animating';\r\n        this.animationTiming  = ( atts.hasOwnProperty( 'animationTiming') ) ? atts.animationTiming : 300;\r\n        this.actionPrefix     = ( atts.hasOwnProperty( 'actionPrefix') ) ? atts.actionPrefix : 'wsu-header-global__navigation-menu';\r\n        this.timer            = false;\r\n\r\n        this.init();\r\n        \r\n    }\r\n\r\n    init() {\r\n\r\n        this.bindEvents(); \r\n\r\n    }\r\n\r\n    bindEvents() {\r\n\t\tdocument.addEventListener(\r\n\t\t\t'click', \r\n\t\t\tthis.clickEvents.bind( this ),\r\n\t\t\tfalse\r\n\t\t);\r\n\r\n        document.addEventListener(\r\n\t\t\t'keydown', \r\n\t\t\tthis.keyDownEvents.bind( this ),\r\n\t\t\tfalse\r\n\t\t);\r\n\t}\r\n\r\n    clickEvents( event ) {\r\n\t\t\r\n\t\ttry {\r\n\r\n            let eventElement = event.target;\r\n\r\n            // check Close Navigation\r\n            if ( toggleShould( { eventElement: eventElement, clickClass: this.closeClass, checkParent: true }) ) {\r\n\r\n                event.preventDefault();\r\n\r\n                let wrapper = elementGet( { elementClass: this.wrapperClass } );\r\n\r\n                if ( wrapper ) {\r\n\r\n                    toggleAriaExpandedClose( { \r\n                        wrapper:          wrapper,\r\n                        actionPrefix:     this.actionPrefix,\r\n                        ariaLabelElement: eventElement,\r\n                    } );\r\n\r\n                }\r\n\r\n            }\r\n\r\n\r\n            // Check Toggle Navigation\r\n            if ( toggleShould( { eventElement: eventElement, clickClass: this.toggleClass, checkParent: true }) ) {\r\n\r\n                event.preventDefault();\r\n\r\n                let wrapper = elementGet( { elementClass: this.wrapperClass } );\r\n\r\n                if ( wrapper ) {\r\n\r\n                    toggleAria( { \r\n                        wrapper:          wrapper,\r\n                        actionPrefix:     this.actionPrefix,\r\n                        ariaLabelElement: eventElement\r\n                    } );\r\n\r\n                }\r\n\r\n            }\r\n\t\t\t\r\n\t\t\t\r\n\t\t} catch (error) {\r\n\t\t  console.error(error);\r\n\t\t}\r\n\t\t\r\n\t}\r\n\r\n    keyDownEvents( event ) {\r\n\r\n        try {\r\n\r\n            if ( keyDownEvent( { domEvent: event, key:'Escape', inClass: this.wrapperClass } ) ) {\r\n\r\n                toggleAriaExpandedClose( { \r\n                    wrapper:          elementGet( { elementClass: this.wrapperClass } ),\r\n                    actionPrefix:     this.actionPrefix,\r\n                    ariaLabelElement: elementGet( { elementClass: this.toggleClass } ),  \r\n                } );\r\n\r\n            }\r\n           \r\n\t\t} catch (error) {\r\n\t\t  console.error(error);\r\n\t\t}\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default WsuHeaderGlobal;","//import wsuDropdownModal from \"../elements/dropdown-modal/_dropdown-modal\";\r\nimport WsuMenuToggle from \"../elements/menu-toggle/_menu-toggle\";\r\nimport WsuNavigationSiteVertical from '../components/navigation-site-vertical/_navigation-site-vertical';\r\nimport WsuHeaderGlobal from \"../components/header-global/_header-global\";\r\n\r\n\r\n\r\n\r\nconst wsu = {\r\n    verticalNavitation: new WsuNavigationSiteVertical(),\r\n    menuToggle: new WsuMenuToggle(),\r\n    headerGlobal: new WsuHeaderGlobal()\r\n}"],"sourceRoot":""}